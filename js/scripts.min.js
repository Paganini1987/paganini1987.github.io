document.addEventListener("DOMContentLoaded",function(){var e=[].slice.call(document.querySelectorAll("img.lazy")),t=[].slice.call(document.querySelectorAll(".lazy-background")),n=[].slice.call(document.querySelectorAll("[data-bg]"));if("IntersectionObserver"in window){let a=new IntersectionObserver(function(e,t){e.forEach(function(e){if(e.isIntersecting){let t=e.target;t.src=t.dataset.src,t.srcset=t.dataset.srcset,t.classList.remove("lazy"),a.unobserve(t)}})});e.forEach(function(e){a.observe(e)});let o=new IntersectionObserver(function(e,t){e.forEach(function(e){e.isIntersecting&&(e.target.classList.add("visible"),o.unobserve(e.target))})});t.forEach(function(e){o.observe(e)});let r=new IntersectionObserver(function(e,t){e.forEach(function(e){if(e.isIntersecting){let t=e.target;t.style.backgroundImage="url("+t.dataset.bg+")",r.unobserve(t)}})});n.forEach(function(e){r.observe(e)})}else e.forEach(function(e){e.src=e.dataset.src,e.srcset=e.dataset.srcset}),t.forEach(function(e){e.classList.add("visible")}),n.forEach(function(e){e.style.backgroundImage="url("+e.dataset.bg+")"})}),document.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("canvas"),t=document.getElementById("canvas2"),n=e.getContext("2d"),a=t.getContext("2d"),o=window.innerWidth,r=window.innerHeight,c=new Image,i=new Image;function s(){return a.clearRect(0,0,o,r),a.drawImage(i,0,0,o,r),a.getImageData(0,0,o,r)}c.src="/img/@2x/209.jpg",i.src="/img/@2x/209.png",e.width=o,e.height=r,t.width=o,t.height=r,c.onload=function(){n.drawImage(c,0,0,o,r)},i.onload=function(){s()},window.addEventListener("resize",function(){o=window.innerWidth,r=window.innerHeight,e.width=o,e.height=r,t.width=o,t.height=r,n.clearRect(0,0,o,r),n.drawImage(c,0,0,o,r),s()}),document.getElementById("color").addEventListener("change",function(e){var t=e.target.value.match(/[A-Za-z0-9]{2}/g);!function([e,t,n]){let o=s();for(var r=0;r<o.data.length;r+=4){let a=o.data[r],c=o.data[r+1],i=o.data[r+2],s=(o.data[r+3],(a+c+i)/3/255);o.data[r]=e*s,o.data[r+1]=t*s,o.data[r+2]=n*s}a.putImageData(o,0,0)}(t=t.map(function(e){return parseInt(e,16)}))})});const videoElement=document.querySelector("video"),videoSelect=document.querySelector("select#videoSource"),selectors=[videoSelect];function gotDevices(e){const t=selectors.map(e=>e.value);selectors.forEach(e=>{for(;e.firstChild;)e.removeChild(e.firstChild)});for(let t=0;t!==e.length;++t){const n=e[t],a=document.createElement("option");a.value=n.deviceId,"videoinput"===n.kind?(a.text=n.label||`camera ${videoSelect.length+1}`,videoSelect.appendChild(a)):console.log("Some other kind of source/device: ",n)}selectors.forEach((e,n)=>{Array.prototype.slice.call(e.childNodes).some(e=>e.value===t[n])&&(e.value=t[n])})}function gotStream(e){return window.stream=e,videoElement.srcObject=e,navigator.mediaDevices.enumerateDevices()}function handleError(e){console.log("navigator.MediaDevices.getUserMedia error: ",e.message,e.name)}function start(){window.stream&&window.stream.getTracks().forEach(e=>{e.stop()});const e=videoSelect.value,t={video:{deviceId:e?{exact:e}:void 0}};navigator.mediaDevices.getUserMedia(t).then(gotStream).then(gotDevices).catch(handleError)}navigator.mediaDevices.enumerateDevices().then(gotDevices).catch(handleError),videoSelect.onchange=start,start();